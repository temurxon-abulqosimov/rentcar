name: ðŸ§ª Deploy to Staging

on:
  push:
    branches: [ develop, staging, feature/* ]
  pull_request:
    branches: [ develop, staging ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: ðŸ“¥ Checkout code
      uses: actions/checkout@v4
      
    - name: ðŸŸ¢ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: ðŸ“¦ Install dependencies
      run: npm ci
      
    - name: ðŸ”¨ Build application
      run: npm run build
      
    - name: ðŸ“‹ Build info
      run: |
        echo "âœ… Staging build completed successfully!"
        echo "Branch: ${{ github.ref_name }}"
        echo "Commit: ${{ github.sha }}"

  # Optional: Deploy to staging server
  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/staging'
    
    steps:
    - name: ðŸ“¥ Checkout code
      uses: actions/checkout@v4
      
    - name: ðŸš€ Deploy to staging
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.STAGING_HOST }}
        username: ${{ secrets.STAGING_USERNAME }}
        key: ${{ secrets.STAGING_SSH_KEY }}
        port: ${{ secrets.STAGING_PORT }}
        script: |
          echo "ðŸ§ª Deploying to staging..."
          
          cd ~/rentcar-staging
          git pull origin ${{ github.ref_name }}
          docker-compose down
          docker system prune -f
          docker-compose up -d --build
          
          echo "âœ… Staging deployment completed!" 